@use "sass:map";
@import "mixins.scss";
@import "theme.scss";
@import "root.scss";

@import "utils.scss";

@import "functions.scss";

@import "typography.scss";

/* Header */
.main-header {
  margin: 0;
  padding: 1rem;
  background-color: var(--color-primary);
  /* color: var(--color-lights); */
  display: flex;
  justify-content: space-between;
  align-items: center;
  grid-area: header;
}

.main-header nav a {
  /* color:var(--color-lights) */
}

@media (max-width: 768px) {
  .main-header.base-box {
    flex-direction: row;
  }
}

/* Main */
.main-content {
  grid-area: main;
}

/* Logo */

.logo {
  color: var(--color-lights);
  text-decoration: none;
}

.logo h1::before {
  content: "ðŸªµ";
  margin-right: 0.25em;
  display: inline;
}

.logo:hover {
  filter: brightness(85%);
}

.logo h1 {
  font-size: 1.5rem;
  margin-bottom: 0;
}

.logo h2 {
  margin-top: 0;
  font-size: 1rem;
}

/* Hero */
.page-hero {
  padding: calc(var(--spaces-padding-base) * 1.5);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-areas: ". hero-content";
  min-height: 45vh;
}

.page-hero__content {
  color: var(--color-lights);
  grid-area: hero-content;
  align-self: end;
}

@media (max-width: 768px) {
  .page-hero {
    grid-template-columns: 1fr;
  }
}

/* Products */

// .page-products .feature__item:is(.feature__item-relevant) :where(h1, h2) {
//   color: var(--color-primary);
//   font-size: multiply(2em, 0.75);
//   border-radius: 1em;
// }

/* .page-products .feature__item:nth-child(2){
    background-color: red;
} */

/* Feature */

.feature__item {
  width: 33.333%;
  box-sizing: border-box;
  container-type: inline-size;
  container-name: feature__item;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;

  header {
    flex-basis: 20%;
    flex-shrink: 1;
  }

  figure {
    flex-basis: 25%;
    flex-shrink: 0;
  }

  img {
    width: 100%;
  }

  &-content {
    box-sizing: border-box;
  }

  p {
    @include first-letter;
  }

  @for $i from 1 to 4 {
    &:nth-child(1n + #{$i}) :where(h1, h2) {
      color: lighten(map.get($colors, primary), $i * 5%);
    }
  }
}

@container feature__item (max-width:550px) {
  /* .feature__item header{
        flex-basis: 0;
    } */
  .feature__item .flexbox {
    flex-direction: column;
  }
  .feature__item .feature__item-content {
    padding: 0 0;
  }
}

/* Contacts */

.page-contacts {
  max-width: var(--page-xxl);
  grid-template-areas: "info image";
  margin: 0 auto;
  &__info {
    align-self: center;
    grid-area: info;
  }

  figure {
    width: 100%;
    box-sizing: border-box;
    grid-area: image;
  }

  img {
    width: 100%;
    margin: 0 auto;
    display: block;
  }
  &__info p {
    @include first-letter;
  }
}

::selection {
  background-color: var(--color-alt);
}

@media (max-width: 768px) {
  .page-contacts {
    grid-template-areas:
      "image"
      "info";
  }
}
/* Footer */

.main-footer {
  background-color: var(--color-primary);
  padding: 1rem;
  color: var(--color-lights);
  grid-area: footer;
}

/* Buttons */
.button {
  background-color: var(--color-primary);
  color: var(--color-lights);
  padding: 0.75em;
  border-radius: 0.5em;
  text-decoration: none;
  display: inline-block;

  &:hover {
    background-color: var(--color-primary-hover);
    color: var(--color-lights);
    animation: pulse 0.3s 1;
    /* transform: scale(1.15) rotate(5deg);
      box-shadow: 2px 2px 1em var(--color-shadows-deep);
      transition: all var(--transition-duration); */
  }

  &:active {
    filter: brightness(85%);
  }

  &-secondary {
    @extend .button;
    background-color: var(--color-alt);
    color: var(--color-shadows);
    &:hover {
      background-color: var(--color-alt-hover);
      color: var(--color-lights);
    }
  }
}

/* Forms */
.form-group {
  &-flex {
    display: flex;
    align-items: flex-start;
    gap: var(--spaces-gap-base);
  }
  fieldset {
    border: none;
    padding: 0;
    margin-bottom: 1em;
  }
  label {
    display: block;
    margin-bottom: 0.5em;
  }
}

.form-control {
  display: block;
  width: 100%;
  background-color: var(--color-inputs-bg);
  color: var(--color-inputs-text);
  border-color: var(--color-inputs-border);
  border-style: solid;
  border-width: 0.25em;
  border-radius: 0.5em;
  padding: 1em;
  font-size: 1rem;
  box-sizing: border-box;
  &[type="checkbox"] {
    display: inline-block;
    width: auto;
    accent-color: var(--color-primary);
  }
&:focus {
    outline-color: var(--color-primary);
  }
}

button {
  cursor: pointer;
}

/* images */
figure {
  transition: all var(--transition-duration);
}
figure:hover {
  transform: rotate(-5deg);
}

/* Details */
.expandable-details {
  padding: var(--spaces-padding-base);
}

.expandable-details summary {
  font-size: 1.5rem;
}

.page-faq {
  @include bordered-background();
}

* {
  /* scrollbar-width: 2rem; */
  scrollbar-color: var(--color-primary) var(--color-alt);
}

@supports selector(::-webkit-scrollbar) {
  ::-webkit-scrollbar {
    width: auto;
  }

  ::-webkit-scrollbar-track {
    background-color: var(--color-primary);
  }
  ::-webkit-scrollbar-thumb {
    background-color: var(--color-alt);
    margin: 2px;
    border-radius: 1rem;
  }
}

@mixin box-decoration() {
  position: relative;
  padding-bottom: 3em;
  transform-origin: center;
  box-shadow: inset 0 -0.5em 0 0 var(--color-lights);
  &::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 0.5em;
    border-top: 0.15em solid brown;
    border-bottom: 0.15em solid brown;
    box-sizing: border-box;
    bottom: 0;
    z-index: 0;
  }
  &::before {
    content: "";
    --b: 3px; /* border thickness */
    --s: 60px; /* preferred size shape */
    --c: var(--color-alt);
    --d: #ffd900;
    width: var(--s);
    aspect-ratio: 1;
    border-radius: 50%;
    background: repeating-radial-gradient(
          calc(2 * var(--b)) at top,
          var(--d) -1px,
          var(--c) 0 calc(50% - 1px),
          var(--d) 50% calc(100% - 1px)
        )
        calc(50% + var(--b)) 100%,
      repeating-radial-gradient(
          calc(2 * var(--b)) at bottom,
          var(--c) -1px,
          var(--d) 0 calc(50% - 1px),
          var(--c) 50% calc(100% - 1px)
        )
        50% 0;
    background-size: 150% 50%;
    background-repeat: no-repeat;
    border: calc(var(--b) * 2) solid var(--color-primary);
    box-sizing: border-box;
    position: absolute;
    z-index: 1;
    bottom: calc(var(--s) / 2 * -1);
    left: calc((var(--s) / 2 * -1) + 50%);

    animation: rotate 15s linear infinite;
  }
}

.box-decoration {
  @include box-decoration();
  &.disable-animation {
    &::before {
      animation: none;
    }
  }
}

.accordion {
  overflow: hidden;
  position: relative;
}

.accordion-title {
  background-color: var(--color-lights);
  position: relative;
  z-index: 2;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: calc(var(--spaces-gap-base) / 2);
  padding: calc(var(--spaces-padding-base) / 4) 0;
  font-size: 1.25em;
  border-bottom: 1px solid;
}

.accordion-title::before {
  --triangle-small-sizes: 5px;
  --triangle-big-sizes: 9.1px;
  content: "";
  width: 0px;
  height: 0px;
  border-style: solid;
  border-width: var(--triangle-small-sizes) 0 var(--triangle-small-sizes)
    var(--triangle-big-sizes);
  border-color: transparent transparent transparent var(--color-primary);
  transition: all 300ms;
  display: inline-block;
}

.accordion-content {
  animation: closed 500ms forwards;
  overflow: hidden;
  padding: calc(var(--spaces-gap-base) / 2);
}

.accordion.opened .accordion-content {
  animation: opened 500ms forwards;
}

.accordion.opened .accordion-title::before {
  transform: rotate(90deg);
}

@keyframes opened {
  0% {
    transform: translateY(-120%);
    position: absolute;
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes closed {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    transform: translateY(-120%);
    position: absolute;
    opacity: 0;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes rotate {
  0% {
    transform: rotate(0deg) scale(1);
  }
  50% {
    transform: rotate(180deg) scale(1.5);
  }
  100% {
    transform: rotate(360deg) scale(1);
  }
}

@import 'darkmode.scss';